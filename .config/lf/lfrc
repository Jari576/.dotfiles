# Settings
set anchorfind false
set autoquit false
set cleaner ~/.config/lf/cleaner
set dircache true
# set dircounts true
# set dirfirst true
# set dironly
set drawbox true
set errorfmt "\033[7;31;47m%s\033[0m"
set filesep "\n"
set findlen 1
set globsearch true
set hidden true
set hiddenfiles '.*'
set icons true
set ifs ''
set ignorecase true
set ignoredia true
set incfilter true
set incsearch true
set info size:time
set infotimefmtnew 'Jan _2 15:04'
set infotimefmtold 'Jan _2  2006'
# set mouse
set number true
set period 1
set preview true
set previewer ~/.config/lf/previewer
set promptfmt "\033[32;1m%u@%h\033[0m:\033[34;1m%d\033[0m\033[1m%f\033[0m"
set ratios '1:2:3'
set relativenumber true
# set reverse
set scrolloff 20
set shell zsh
set shellflag '-c'
set shellopts ''
set smartcase true
set smartdia true
# set sortby 'natural'
set tabstop 4
# set tagfmt "\033[31m%s\033[0m"
set tempmarks ''
set timefmt 'Mon Jan _2 15:04:05 2006'
set truncatechar '~'
set waitmsg 'Press any key to continue'
set wrapscan true
set wrapscroll false

# Unarchive function
cmd unarchive ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd fzf_jump ${{
    previewer='$lf_previewer {} $FZF_PREVIEW_COLUMNS $FZF_PREVIEW_LINES $(($COLUMNS - $FZF_PREVIEW_COLUMNS)) $(($LINES - $FZF_PREVIEW_LINES))'
    if [[ -v $1 ]]; then;
        res="$(find . -maxdepth $1 | fzf --reverse --exact --nth=-1 --delimiter='/' --preview=${previewer} | sed 's/\\/\\\\/g;s/"/\\"/g')"
    else
        res="$(find . | fzf --reverse --exact --nth=-1 --delimiter='/' --preview=${previewer} | sed 's/\\/\\\\/g;s/"/\\"/g')"
    fi

    if [ -d "$res" ]; then
        cmd="cd"
    else 
        cmd="select"                                                       
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd editSudoOrNot ${{
    if [[ -w $f ]]; then
        $EDITOR "$f" 
    else
        sudoedit "$f"
    fi
}}

cmd open ${{
    test -L $f && f=$(readlink -f $f)
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do xdg-open $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd true-cd &{{
    case $TERM in
      sun-cmd) print -Pn "\e]lLF (%~)\e\\" > /dev/tty
        ;;
      *xterm*|rxvt|(dt|k|E)term) print -Pn "\e]2;LF (%~)\a" > /dev/tty
        ;;
    esac
}}
# on-cd

cmd trash %{{
    set -f
    printf "delete $fx? [y/n]"
    read ans
    if [[ "$ans" =~ ^[Yy]$ ]]; then
        trash-put $fx
    fi
}}

# Keymaps
map <enter> shell
map sn :set sortby natural
map ss :set sortby size
map st :set sortby time
map sa :set sortby atime
map sc :set sortby ctime
map e :editSudoOrNot
map az zip
map at tar
map ag targz
map ab tarbz2
map au :unarchive
map <c-f> :fzf_jump
map <c-j> :fzf_jump 1
map <delete> :trash
map <c-e> :$$EDITOR .
map J push 5j
map K push 5k

